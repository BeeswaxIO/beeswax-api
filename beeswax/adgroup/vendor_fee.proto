// Copyright 2022, Beeswax.IO Inc.
//
// Protocol buffer defining vendor fees

syntax = "proto2";
package adgroup;

import "beeswax/currency/currency.proto";

option java_package = "com.beeswax.adgroup";
option cc_enable_arenas = true;


// VendorFeesInfo contains the aggregrated amount and percent of a
// lineitem/campaign's vendor fees.
// Next Id: 3
message VendorFeesInfo {
  // total_vendor_fees_transactions are grouped by currency.
  // vendor fees with the same currency are aggregrated into one
  // CurrencyAmount object.
  // For example, if a lineitem/campaign has a vendor fees of 30 micros USD,
  // another of 20 micros USD, the other 40 micros GBP,
  // there will be two items in this field - one 50 micros USD,
  // the other 40 micros GBP.
  repeated currency.CurrencyAmount total_vendor_fees_amounts = 1;
  // total_fee_percent_micros is the sum of percent value in micros of all
  // percent type vendor fees.
  // For example, a line/campaign has a vendor fees at 5%, another 2%,
  // this field will be "7" in micros, i.e., 7000000
  optional int64 total_fee_percent_micros = 2;
}

// Next Id: 11
// VendorFee is populated by 2 writers
// - AdgroupPusher:
//    For vendors setup by customer using Buzz
//    For creatives.creative_vendors provided by Beeswax to customer in Buzz (e.g. Moat),
//    or setup by customer using Buzz
// - SBS segment_pricing_augmentor :
//    - For all matched data_providers segments from lineitems
// SBS also combines the vendor fees from the selected creative after creative selection with the
// vendor fees from the lineitem to calculate the final total vendor fee cost
message VendorFee {
  enum FeeType {
    CPM = 0;
    PERCENT = 1;
  }
  optional int32 vendor_id = 1;
  // for data_provider segments, vendor_name is set to data_provider_key
  optional string vendor_name = 2;
  optional int32 vendor_fee_id = 3;
  // for data_provider segments, vendor_fee_name is set to segment_key
  optional string vendor_fee_name = 4;
  // represents percent charge micros or cpm charge micros depending "fee_type"
  optional int64 fee_amount_micros = 5;
  optional currency.CurrencyTransaction fee_amount = 9;
  optional FeeType fee_type = 6;
  enum VendorType {
    // when vendor is from Buzz and setup by the customer
    CUSTOMER = 1;
    // when SBS segment_pricing_augmentor matches on a FES data_provider segment
    DATA_PROVIDER = 2;
  }
  optional VendorType vendor_type = 7;
  // This field is deprecated. Use fee_amount instead.
  optional currency.Currency.Code currency = 8 [default = USD, deprecated = true];
  // Some billing rules (e.g. DV) needs to look at the billing category.
  optional string billing_category = 10;
}
